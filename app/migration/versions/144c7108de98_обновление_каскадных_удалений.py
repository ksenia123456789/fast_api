"""Обновление каскадных удалений

Revision ID: 144c7108de98
Revises: 52254e3d2f1b
Create Date: 2024-12-01 20:16:15.975961

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '144c7108de98'
down_revision: Union[str, None] = '52254e3d2f1b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_logs')
    op.drop_constraint('fk_discount_product', 'discounts', type_='foreignkey')
    op.create_foreign_key(None, 'discounts', 'products', ['product_id'], ['product_id'])
    op.drop_constraint('fk_order', 'order_items', type_='foreignkey')
    op.drop_constraint('fk_product', 'order_items', type_='foreignkey')
    op.create_foreign_key(None, 'order_items', 'products', ['product_id'], ['product_id'])
    op.create_foreign_key(None, 'order_items', 'orders', ['order_id'], ['order_id'])
    op.drop_constraint('fk_status', 'orders', type_='foreignkey')
    op.drop_constraint('fk_customer', 'orders', type_='foreignkey')
    op.create_foreign_key(None, 'orders', 'customers', ['customer_id'], ['customer_id'])
    op.create_foreign_key(None, 'orders', 'order_statuses', ['status_id'], ['status_id'])
    op.drop_constraint('fk_payment_order', 'payments', type_='foreignkey')
    op.create_foreign_key(None, 'payments', 'orders', ['order_id'], ['order_id'])
    op.drop_constraint('fk_storage', 'products', type_='foreignkey')
    op.drop_constraint('fk_category', 'products', type_='foreignkey')
    op.create_foreign_key(None, 'products', 'storage', ['storage_id'], ['storage_id'])
    op.create_foreign_key(None, 'products', 'categories', ['category_id'], ['category_id'])
    op.drop_constraint('fk_review_product', 'reviews', type_='foreignkey')
    op.drop_constraint('fk_review_customer', 'reviews', type_='foreignkey')
    op.create_foreign_key(None, 'reviews', 'products', ['product_id'], ['product_id'])
    op.create_foreign_key(None, 'reviews', 'customers', ['customer_id'], ['customer_id'])
    op.drop_constraint('fk_shipping_order', 'shipping', type_='foreignkey')
    op.create_foreign_key(None, 'shipping', 'orders', ['order_id'], ['order_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'shipping', type_='foreignkey')
    op.create_foreign_key('fk_shipping_order', 'shipping', 'orders', ['order_id'], ['order_id'], ondelete='CASCADE')
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.create_foreign_key('fk_review_customer', 'reviews', 'customers', ['customer_id'], ['customer_id'], ondelete='CASCADE')
    op.create_foreign_key('fk_review_product', 'reviews', 'products', ['product_id'], ['product_id'], ondelete='CASCADE')
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.create_foreign_key('fk_category', 'products', 'categories', ['category_id'], ['category_id'], ondelete='CASCADE')
    op.create_foreign_key('fk_storage', 'products', 'storage', ['storage_id'], ['storage_id'], ondelete='CASCADE')
    op.drop_constraint(None, 'payments', type_='foreignkey')
    op.create_foreign_key('fk_payment_order', 'payments', 'orders', ['order_id'], ['order_id'], ondelete='CASCADE')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.create_foreign_key('fk_customer', 'orders', 'customers', ['customer_id'], ['customer_id'], ondelete='CASCADE')
    op.create_foreign_key('fk_status', 'orders', 'order_statuses', ['status_id'], ['status_id'], ondelete='CASCADE')
    op.drop_constraint(None, 'order_items', type_='foreignkey')
    op.drop_constraint(None, 'order_items', type_='foreignkey')
    op.create_foreign_key('fk_product', 'order_items', 'products', ['product_id'], ['product_id'], ondelete='CASCADE')
    op.create_foreign_key('fk_order', 'order_items', 'orders', ['order_id'], ['order_id'], ondelete='CASCADE')
    op.drop_constraint(None, 'discounts', type_='foreignkey')
    op.create_foreign_key('fk_discount_product', 'discounts', 'products', ['product_id'], ['product_id'], ondelete='CASCADE')
    op.create_table('order_logs',
    sa.Column('log_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('reason', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('log_id', name='order_logs_pkey')
    )
    # ### end Alembic commands ###
